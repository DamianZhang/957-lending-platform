// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DamianZhang/957-lending-platform/service (interfaces: BorrowerService)

// Package mocksvc is a generated GoMock package.
package mocksvc

import (
	context "context"
	reflect "reflect"

	service "github.com/DamianZhang/957-lending-platform/service"
	gomock "github.com/golang/mock/gomock"
)

// MockBorrowerService is a mock of BorrowerService interface.
type MockBorrowerService struct {
	ctrl     *gomock.Controller
	recorder *MockBorrowerServiceMockRecorder
}

// MockBorrowerServiceMockRecorder is the mock recorder for MockBorrowerService.
type MockBorrowerServiceMockRecorder struct {
	mock *MockBorrowerService
}

// NewMockBorrowerService creates a new mock instance.
func NewMockBorrowerService(ctrl *gomock.Controller) *MockBorrowerService {
	mock := &MockBorrowerService{ctrl: ctrl}
	mock.recorder = &MockBorrowerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBorrowerService) EXPECT() *MockBorrowerServiceMockRecorder {
	return m.recorder
}

// CreateSession mocks base method.
func (m *MockBorrowerService) CreateSession(arg0 context.Context, arg1 *service.CreateSessionInput) (*service.CreateSessionOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateSession", arg0, arg1)
	ret0, _ := ret[0].(*service.CreateSessionOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateSession indicates an expected call of CreateSession.
func (mr *MockBorrowerServiceMockRecorder) CreateSession(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateSession", reflect.TypeOf((*MockBorrowerService)(nil).CreateSession), arg0, arg1)
}

// RefreshToken mocks base method.
func (m *MockBorrowerService) RefreshToken(arg0 context.Context, arg1 *service.RefreshTokenInput) (*service.RefreshTokenOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RefreshToken", arg0, arg1)
	ret0, _ := ret[0].(*service.RefreshTokenOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RefreshToken indicates an expected call of RefreshToken.
func (mr *MockBorrowerServiceMockRecorder) RefreshToken(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RefreshToken", reflect.TypeOf((*MockBorrowerService)(nil).RefreshToken), arg0, arg1)
}

// SignIn mocks base method.
func (m *MockBorrowerService) SignIn(arg0 context.Context, arg1 *service.SignInInput) (*service.SignInOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignIn", arg0, arg1)
	ret0, _ := ret[0].(*service.SignInOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignIn indicates an expected call of SignIn.
func (mr *MockBorrowerServiceMockRecorder) SignIn(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignIn", reflect.TypeOf((*MockBorrowerService)(nil).SignIn), arg0, arg1)
}

// SignUp mocks base method.
func (m *MockBorrowerService) SignUp(arg0 context.Context, arg1 *service.SignUpInput) (*service.SignUpOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignUp", arg0, arg1)
	ret0, _ := ret[0].(*service.SignUpOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignUp indicates an expected call of SignUp.
func (mr *MockBorrowerServiceMockRecorder) SignUp(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignUp", reflect.TypeOf((*MockBorrowerService)(nil).SignUp), arg0, arg1)
}
