// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/DamianZhang/957-lending-platform/service (interfaces: BorrowerService)

// Package mocksvc is a generated GoMock package.
package mocksvc

import (
	context "context"
	reflect "reflect"

	service "github.com/DamianZhang/957-lending-platform/service"
	gomock "github.com/golang/mock/gomock"
)

// MockBorrowerService is a mock of BorrowerService interface.
type MockBorrowerService struct {
	ctrl     *gomock.Controller
	recorder *MockBorrowerServiceMockRecorder
}

// MockBorrowerServiceMockRecorder is the mock recorder for MockBorrowerService.
type MockBorrowerServiceMockRecorder struct {
	mock *MockBorrowerService
}

// NewMockBorrowerService creates a new mock instance.
func NewMockBorrowerService(ctrl *gomock.Controller) *MockBorrowerService {
	mock := &MockBorrowerService{ctrl: ctrl}
	mock.recorder = &MockBorrowerServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBorrowerService) EXPECT() *MockBorrowerServiceMockRecorder {
	return m.recorder
}

// SignUp mocks base method.
func (m *MockBorrowerService) SignUp(arg0 context.Context, arg1 *service.SignUpRequest) (*service.SignUpResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SignUp", arg0, arg1)
	ret0, _ := ret[0].(*service.SignUpResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SignUp indicates an expected call of SignUp.
func (mr *MockBorrowerServiceMockRecorder) SignUp(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SignUp", reflect.TypeOf((*MockBorrowerService)(nil).SignUp), arg0, arg1)
}
